package com.rmdc.ontologyEditor.model;
// Generated Oct 22, 2017 4:41:35 PM by Hibernate Tools 4.3.1


import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * OntoChange generated by hbm2java
 */
@Entity
@Table(name="onto_change"
    ,catalog="ontologyeditor"
)
public class OntoChange  implements java.io.Serializable {

    @Id @GeneratedValue(strategy= GenerationType.AUTO)
     private Integer id;
     private Date timestamp;
     @ManyToOne(fetch=FetchType.LAZY)
     private ChangeType changeType;
     private String concept;
     private String changeAxiom;
     @ManyToOne(fetch=FetchType.LAZY)
     private ChangeOn changeOn;
     @ManyToOne(fetch=FetchType.LAZY)
     private OntoVersion ontoVersion;
     @ManyToOne(fetch=FetchType.LAZY)
     private User user;
     private String description;
     @OneToMany(fetch=FetchType.LAZY, mappedBy="ontoChange")
     private Set<ChangeDes> changeDeses = new HashSet(0);
     @OneToMany(fetch=FetchType.LAZY, mappedBy="ontoChange")
     private Set<ChangeInstances> changeInstanceses = new HashSet(0);


    @OneToMany(fetch=FetchType.LAZY, mappedBy="ontoChange")
    private Set<ChangeAnnotation> changeAnnotations = new HashSet(0);

    public OntoChange() {
    }

	
    public OntoChange(OntoVersion ontoVersion) {
        this.ontoVersion = ontoVersion;
    }
    public OntoChange(ChangeType changeType, OntoVersion ontoVersion, User user, String description, Set changeDeses, Set changeInstanceses) {
       this.changeType = changeType;
       this.ontoVersion = ontoVersion;
       this.user = user;
       this.description = description;
       this.changeDeses = changeDeses;
       this.changeInstanceses = changeInstanceses;
    }
   


    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    @Version@Temporal(TemporalType.TIMESTAMP)
    @Column(name="timestamp", length=19)
    public Date getTimestamp() {
        return this.timestamp;
    }
    
    public void setTimestamp(Date timestamp) {
        this.timestamp = timestamp;
    }


    @JoinColumn(name="change_type_id")
    public ChangeType getChangeType() {
        return this.changeType;
    }
    
    public void setChangeType(ChangeType changeType) {
        this.changeType = changeType;
    }

    @JoinColumn(name="change_on_id")
    public ChangeOn getChangeOn() {
        return changeOn;
    }

    public void setChangeOn(ChangeOn changeOn) {
        this.changeOn = changeOn;
    }

    @JoinColumn(name="onto_version_id", nullable=false)
    public OntoVersion getOntoVersion() {
        return this.ontoVersion;
    }
    
    public void setOntoVersion(OntoVersion ontoVersion) {
        this.ontoVersion = ontoVersion;
    }


    @JoinColumn(name="user_id")
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    
    @Column(name="description", length=256)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name="change_axiom", length=256)
    public String getChangeAxiom() {
        return changeAxiom;
    }

    public void setChangeAxiom(String changeAxiom) {
        this.changeAxiom = changeAxiom;
    }

    @Column(name="concept", length=256)
    public String getConcept() {
        return concept;
    }

    public void setConcept(String concept) {
        this.concept = concept;
    }

    public Set<ChangeDes> getChangeDeses() {
        return this.changeDeses;
    }
    
    public void setChangeDeses(Set<ChangeDes> changeDeses) {
        this.changeDeses = changeDeses;
    }


    public Set<ChangeInstances> getChangeInstanceses() {
        return this.changeInstanceses;
    }
    
    public void setChangeInstanceses(Set<ChangeInstances> changeInstanceses) {
        this.changeInstanceses = changeInstanceses;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="ontoChange")
    public Set<ChangeAnnotation> getChangeAnnotations() {
        return this.changeAnnotations;
    }

    public void setChangeAnnotations(Set<ChangeAnnotation> changeAnnotations) {
        this.changeAnnotations = changeAnnotations;
    }

}


